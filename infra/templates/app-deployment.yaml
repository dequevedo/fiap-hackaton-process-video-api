apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Release.Name }}-app
  labels:
    app: {{ .Release.Name }}-app
spec:
  replicas: {{ .Values.app.replicas }}
  selector:
    matchLabels:
      app: {{ .Release.Name }}-app
  template:
    metadata:
      labels:
        app: {{ .Release.Name }}-app
    spec:
      imagePullSecrets:
          - name: ecr-secret
      containers:
        - name: {{ .Release.Name }}-app
          image: "{{ .Values.app.image.repositoryPrefix }}/{{ .Release.Name }}:{{ .Values.app.image.tag }}"
          imagePullPolicy: Always
          ports:
            - containerPort: 8080
          env:
            - name: SPRING_DATA_MONGODB_URI
              value: mongodb://localhost:27017/{{ .Release.Name }}
          resources:
            requests:
              cpu: "{{ .Values.app.resources.requests.cpu }}"
              memory: "{{ .Values.app.resources.requests.memory }}"
            limits:
              cpu: "{{ .Values.app.resources.limits.cpu }}"
              memory: "{{ .Values.app.resources.limits.memory }}"
          livenessProbe:
            httpGet:
              path: /actuator/health
              port: 8080
            initialDelaySeconds: 15
            periodSeconds: 10
          readinessProbe:
            httpGet:
              path: /actuator/health
              port: 8080
            initialDelaySeconds: 5
            periodSeconds: 5

        - name: mongodb # TODO Remover sidecar e usar o mongo do EKS
          image: mongo:7.0
          ports:
            - containerPort: 27017
          args: ["--bind_ip", "127.0.0.1"]
          volumeMounts:
            - name: mongo-data
              mountPath: /data/db

      volumes: # TODO Remover sidecar e usar o mongo do EKS
        - name: mongo-data
          emptyDir: {}
